-- Tables for 344 Project

/* DROP STATEMENTS */
DROP TABLE per CASCADE CONSTRAINTS;
DROP TABLE dem CASCADE CONSTRAINTS;
DROP TABLE email CASCADE CONSTRAINTS;
DROP TABLE hos CASCADE CONSTRAINTS;
DROP TABLE stu CASCADE CONSTRAINTS;
DROP TABLE par CASCADE CONSTRAINTS;
DROP TABLE phn CASCADE CONSTRAINTS;
DROP TABLE emg CASCADE CONSTRAINTS;
DROP TABLE inc CASCADE CONSTRAINTS;
DROP TABLE medin CASCADE CONSTRAINTS;
DROP TABLE addr CASCADE CONSTRAINTS;
DROP TABLE brn CASCADE CONSTRAINTS;
DROP TABLE stdoc CASCADE CONSTRAINTS;
DROP TABLE sdev CASCADE CONSTRAINTS;
DROP TABLE serv CASCADE CONSTRAINTS;
DROP TABLE ori CASCADE CONSTRAINTS;
DROP TABLE data CASCADE CONSTRAINTS;
DROP TABLE off CASCADE CONSTRAINTS;
DROP TABLE econ CASCADE CONSTRAINTS;
DROP TABLE pro CASCADE CONSTRAINTS:

/* CREATE STATEMENTS */

--PERSON TABLE
CREATE TABLE per (
perID VARCHAR2(35),
perfname VARCHAR2(35) NOT NULL,
perlname VARCHAR2(35) NOT NULL,
permname VARCHAR2 (35),--NULLABLE BECAUSE SOME MIGHT NOT LIST A MIDDLE NAME. 

CONSTRAINT per_perID_pk PRIMARY KEY(perID));
  
--DEMOGRAPHIC TABLE  
CREATE TABLE dem (
stuID NUMBER (10),
demeth VARCHAR2 (35)NOT NULL, -- ETHNICITY
demgen VARCHAR2 (1) NOT NULL, -- GENDER

CONSTRAINT dem_demID_pk PRIMARY KEY (stuID)
CONSTRAINT dem_demID_fk FOREIGN KEY (stuID) REFERENCES stu(stuID));

--EMAIL TABLE
CREATE TABLE email (
emailID NUMBER (10),
emailus VARCHAR2 (20) NOT NULL,
emaildom VARCHAR2 (20)NOT NULL,
  
CONSTRAINT email_emailID_pk PRIMARY KEY (emailID)
CONSTRAINT email_emailID_fk FOREIGN KEY (emailID) REFERENCES email(emailID));

--HOSPITAL TABLE
CREATE TABLE hos (
stuID NUMBER (10),
hosID NUMBER (10)NOT NULL,
hosname VARCHAR2 (35) NOT NULL,
hosprim VARCHAR2 (1) NOT NULL, --PRIMARY (Y/N)  
hosphn NUMBER (10) NOT NULL, --PHONE NUMBER  

CONSTRAINT hos_pk PRIMARY KEY (stuID, hosID)  
CONSTRAINT hos_stuID_fk FOREIGN KEY (stuID) REFERENCES stu(stuID)
CONSTRAINT hos_stuID_fk FOREIGN KEY (stuID) REFERENCES stu(stuID));
  
-- STUDENT TABLE
CREATE TABLE stu (
stuID NUMBER (10),
stuorgID NUMBER (10) NOT NULL, --ORGANIZATON ID
stuyr VARCHAR2 (35) NOT NULL, -- YEAR IN SCHOOL (JUNIOR, SENIOR, ETC)  
stulunch VARCHAR2 (1) NOT NULL, -- LUNCH
sturet VARCHAR2 (1) NOT NULL,   -- RETAINED (CHECK)
stutru VARCHAR2 (1) NOT NULL,   --TRUANCY 
stugradecomm VARCHAR2 (1) NOT NULL, --GRADE COMMENTS
stugradesatis VARCHAR2 (1) NOT NULL,  --GRADE SATISFIED?
stuhomewrk VARCHAR2 (35) NOT NULL,  --HOMEWORK
stuserviceID VARCHA2 (35) NOT NULL,--CHECK THIS
  
CONSTRAINT stu_perID_pk PRIMARY KEY(perID),
CONSTRAINT stu_perID_fk FOREIGN KEY (perID) REFERENCES per(perID),
CONSTRAINT stu_servID_fk FOREIGN KEY (servID) REFERENCES serv(servID)); -- MAKE THIS TABLE

-- EMERGENCY CONTACT TABLE
CREATE TABLE par (
stuID NUMBER (10),
emgID NUMBER (10) NOT NULL, --EMERGENCY ID
parrelation VARCHAR2 (35) NOT NULL, --RELATION TO STUDENT

CONSTRAINT par_pk PRIMARY KEY(stuID, emgID)
CONSTRAINT par_stuID_fk FOREIGN KEY (stuID) REFERENCES stu(stuID)
CONSTRAINT dem_emgID_fk FOREIGN KEY (emgID) REFERENCES par(emgID));  
  
-- PHONE TABLE  
CREATE TABLE phn (
phnID VARCHAR2 (35) NOT NULL,
phntype VARCHAR2 (1) NOT NULL,
phncntry NUMBER (1) NOT NULL,
phnarea NUMBER (1) NOT NULL,
phnexc NUMBER (35) NOT NULL,

CONSTRAINT phn_phnID_pk PRIMARY KEY(phnID)) ;

-- EMERGENCY TABLE  
CREATE emg (
emgID VARCHAR2 (35),    
emgdesc VARCHAR2 (35) NOT NULL,

CONSTRAINT emg_emgID_pk PRIMARY KEY(emgID)) ;
-- SPECIAL SERVICES TABLE
CREATE TABLE serv (
servID NUMBER (10),
  
--Income Table
CREATE TABLE inc (
perID NUMBER (10),
guardID NUMBER (10),  
incfamsi NUMBER (10) NOT NULL,  --FAMILY SIZE
incinc NUMBER (10) NOT NULL, --   FAMILY INCOME
incmili VARCHAR2 (1) NOT NULL,  --MILITARY STATUS (Y/N)
incbran VARCHAR2 (15) NOT NULL, --BRANCH
inclivew VARCHAR2 (15) NOT NULL,--MEMBER LIVES WITH
  
CONSTRAINT inc_pk PRIMARY KEY(perID, guardID),
CONSTRAINT inc_perID_fk FOREIGN KEY (perID) REFERENCES per(perID)  
CONSTRAINT inc_guardID_fk FOREIGN KEY (guardID) REFERENCES inc(guardID));  
  
--MEDICAL INFO TABLE
CREATE TABLE medin (
stuID NUMBER (10),
medinID NUMBER (10),
medindate DATE, -- DATE OF LAST VISIT
medinupda VARCHAR2 (1) --IMMUNIZATION UPDATE (Y/N)  
  
CONSTRAINT medin_stuID_pk PRIMARY KEY (stuID)
CONSTRAINT medin_medinID_pk PRIMARY KEY (medinID)  
CONSTRAINT medin_stuID_fk FOREIGN KEY (stuID) REFERENCES stu(stuID));  
  
  
-- ADDRESS TABLE   
CREATE TABLE addr (
addrID NUMBER (10),
addrstreet VARCHAR2 (35) NOT NULL,
addrcity VARCHAR2 (35) NOT NULL,  
addrzip NUMBER (5) NOT NULL,  
  
CONSTRAINT addr_addrID_pk PRIMARY KEY (addrID)) ;  

--MILITARY BRANCH TABLE
CREATE TABLE brn (
brnID NUMBER (10),
brnname VARCHAR2(35) NOT NULL,
  
CONSTRAINT brn_brnID_pk PRIMARY KEY (brnID));  

--STUDENT DOCTOR TABLE
CREATE TABLE stdoc (
stuID NUMBER (10),
docID NUMBER (10),
 
CONSTRAINT stdoc_pk PRIMARY KEY (stuID, docID)
CONSTRAINT stdoc_stuID_fk FOREIGN KEY (stuID) REFERENCES stu(stuID)
CONSTRAINT stdoc_docID_fk FOREIGN KEY (docID) REFERENCES doc(docID));
  
--SOCIAL DEVELOPMENT TABLE 
CREATE TABLE sdev (
stuID NUMBER (10),
sdevstress VARCHAR2 (1) NOT NULL, --STRESS (Y/N?)
sdevdral VARCHAR2 (1) NOT NULL, --DRUG AL PROBLEMS IN FAMILY (Y/N?)
sdevleg VARCHAR2 (1) NOT NULL, --LEGAL ISSUES (Y/N)
sdevbull VARCHAR2 (1) NOT NULL, --BULLYING ISSUES

CONSTRAINT sdev_stuID_pk PRIMARY KEY (stuID)
CONSTRIANT sdev_stuID_fk FOREIGN KEY (stuID) REFERENCES stu(stuID));
  
--MEMBERSHIP RELEASE FORM TABLE
CREATE TABLE mr (
stuID NUMBER (10),
mrdatsig DATE NOT NULL,     --DATE SIGNED
mrliab VARCHAR2 (1)NOT NULL, --LIABILITY Y/N
mrtrans VARCHAR2 (1)NOT NULL, --TRANSPORTATION
mrpho VARCHAR2 (1) NOT NULL, --PHOTO/VIDEO Y/N
mracadem VARCHAR2 (1) NOT NULL, -- ACADEMIC INFO RELEASE Y/N
mrcomp VARCHAR2 (1) NOT NULL, -- COMPUTER USE Y/N   
mrauthl VARCHAR2 (1) NOT NULL, -- AUTHORIZED TO LEAVE Y/N
mrmemsig VARCHAR2 (1) NOT NULL -- MEMBER SIGNATURE Y/N
mrparsig VARCHAR2 (1) NOT NULL, --PARENT SIGNATURE Y/N
  
CONSTRAINT mr_pk PRIMARY KEY (stuID));   
--Emergency Contact TABLE 
CREATE TABLE econ
  

--OFFICE USE TABLE
CREATE TABLE off
empID NUMBER (10), -- EMPLOYEE ID
stuID NUMBER (10),  -- STUDENT ID
offmemst VARCHAR2 (1) NOT NULL, --CHECK THIS MEMBER STATUS (GUEST, NEW, RENEW)  
offpay VARCHAR2(35) NOT NULL, -- PAYMENT METHOD (PAID, CASH, CHECK, MO, SCHOLARSHIP)
offpaya NUMBER(10) NOT NULL, --PAYMENT AMOUNT 
  
CONSTRAINT off_pk PRIMARY KEY (empID, stuID)
CONSTRIANT off_empID_fk FOREIGN KEY (empID) REFERENCES emp(empID)
CONSTRIANT off_stuID_fk FOREIGN KEY (stuID) REFERENCES stu(stuID));  
  
--DATA ENTRY TABLE
CREATE TABLE data (
empID NUMBER (10), -- EMPLOYEE ID
stuID NUMBER (10),  -- STUDENT ID
datadatr DATE NOT NULL, -- DATE RECEIVED
datadate DATE NOT NULL, -- DATE ENTERED 
  
CONSTRAINT off_pk PRIMARY KEY (empID, stuID)
CONSTRIANT off_empID_fk FOREIGN KEY (empID) REFERENCES emp(empID)
CONSTRIANT off_stuID_fk FOREIGN KEY (stuID) REFERENCES stu(stuID));    
  
--ORIENTATION TABLE
CREATE TABLE ori (  
empID NUMBER (10),
stuID NUMBER (10), 
orida DATE NOT NULL, --ORIENTATION DATE
oriti DATE NOT NULL, --ORIENTATION TIME
oricom VARCHAR2 (1) NOT NULL, --ORIENTATION COMPLETE (Y/N)
  
CONSTRAINT ori_pk PRIMARY KEY (empID, stuID)
CONSTRIANT ori_empID_fk FOREIGN KEY (empID) REFERENCES emp(empID)
CONSTRIANT ori_stuID_fk FOREIGN KEY (stuID) REFERENCES stu(stuID));    
  
--PLACE OF EMPLOYMENT TABLE
CREATE TABLE empp
perID NUMBER (10),
emppna VARCHAR2 (35) NOT NULL, --EMPLOYMENT PLACE/BUSINESS/COMPANY NAME

CONSTRAINT empp_perID_pk PRIMARY KEY(perID),
CONSTRAINT empp_perID_fk FOREIGN KEY (perID) REFERENCES per(perID));
  
  
--Attendance Table
CREATE TABLE att (
stuID NUMBER (10),
attdate DATE NOT NULL, --ATTENDANCE DATE
attchkin DATE NOT NULL, --CHECK IN
attchko DATE NOT NULL, --CHECK OUT
  
CONSTRAINT att_stuID_pk PRIMARY KEY (stuID)  
CONSTRIANT att_stuID_fk FOREIGN KEY (stuID) REFERENCES stu(stuID)); 

--AUTHORIZATION TABLE
CREATE TABLE auth (
emgID NUMBER(10),
emgdesc VARCHAR2 (50) NOT NULL,

CONSTRAINT auth_emgID_pk PRIMARY KEY(emgID)
CONSTRAINT auth_emgID_fk FOREIGN KEY (emgID) REFREENCES emg(emgID));

--EMAIL TABLE
CREATE TABLE ema (
emaID NUMBER (10),
emauser VARCHAR2 (25),
emadom VARCHAR2 (25)
  
CONSTRAINT ema_emaID_pk PRIMARY KEY(emaID)
CONSTRAINT ema_emaID_fk FOREIGN KEY (emaID) REFREENCES ema(emaID));  

--STUDENT DOCTOR TABLE
CREATE TABLE sdoc (
stuID NUMBER (10),  
docID NUMBER (10),    
  
CONSTRAINT sdoc_pk PRIMARY KEY (stuID, docID)
CONSTRAINT sdoc_stuID_fk FOREIGN KEY (stuID)
CONSTRAINT sdoc_docID_fk FOREIGN KEY (docID));

--SPECIAL INSTRUCTIONS TABLE
CREATE TABLE inst (
stuID NUMBER (10),
medID NUMBER (10),
instdesc VARCHAR2 (35)NOT NULL, --DESCRIPTION  
  
CONSTRAINT inst_pk PRIMARY KEY (stuID, medID)  
CONSTRAINT inst_stuID_fk FOREIGN KEY (stuID) REFERENCES stu(stuID)
CONSTRAINT inst_medID_fk FOREIGN KEY (medID) REFERENCES med(medID));

--MEDICATION TABLE
CREATE TABLE med (
medID NUMBER (10),
hosname VARCHAR2 (10)NOT NULL, --name
medamt NUMBER (10) NOT NULL, --amount 
meddir VARCHAR2 (35) NOT NULL, --HOW TO TAKE (MOUTH, EYE DROPS, EAR, ON SKIN, ETC)
medti DATE NOT NULL, -- TIME/S OF DAY
medre VARCHAR2 (35) NOT NULL, -- REASON
  
CONSTRAINT med_medID_pk PRIMARY KEY (medID));    

--PROBLEM TABLE
CREATE TABLE pro (
proID NUMBER (10),
stuID NUMBER (10)  NOT NULL,
prospec VARCHAR2 (35) NOT NULL, 
  
CONSTRAINT pro_pk PRIMARY KEY (proID)
CONSTRAINT pro_stuID_fk FOREIGN KEY (stuID) REFERENCES stu(stuID));



--INSERT STATEMENTS

INSERT INTO per 
  VALUES (3000000001, 'Noah', 'Wetzel','James');
  
INSERT INTO per 
  VALUES (3000000002, 'Jordan', 'Jansen','Fredrick'); 
  
INSERT INTO per 
  VALUES (3000000003, 'Ian', 'Wetzel','Charles');
  
INSERT INTO per 
  VALUES (3000000004, 'Justin', 'Lorentz','Allen');  
  
INSERT INTO per 
  VALUES (3000000005, 'Rachel', 'Stout','Marie');
  
INSERT INTO per 
  VALUES (3000000006, 'Erin', 'Wetzel','Charlene');

INSERT INTO per 
  VALUES (3000000007, 'Sunny', 'Chen',' ');
  
INSERT INTO per 
  VALUES (3000000008, 'Jacob', 'Maurer','Peter');
  
--DEMOGRAPHIC 

INSERT INTO dem
  VALUES (4000000001, 'M', 16-OCT-1996);
  
INSERT INTO dem
  VALUES (4000000002, 'M', 01-JAN-1950);
  
INSERT INTO dem
  VALUES (4000000003, 'M', 20-APR-1994);
  
INSERT INTO dem
  VALUES (4000000004, 'M', 25-APR-1997);  
